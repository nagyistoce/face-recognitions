#summary Alles was ansteht am besten zeitlich sortiert.

== Face recognition ==

== Collect and leran faces ==

== Face preprocessing ==

=== Eye-Detection für rechtes + linkes Auge ===

 * 

 * (Frage) Welche xml benutzen wir -> ROI kleiner, groß siehe (PDF S.272 ff.)
  * Empfehlung: haarcascade_eye wenn fail -> haarcascade_eye_tree_eyeglasses (PDF S.274)

 * (Frage) geschlossene Augen + Brille auch? (ja, wenn erste Durchgang erfolglos)

 * rechtes Auge

 * linkes Auge

== Facedetection ==

 * Rechteck um gefunde/s Gesicht/er zeichnen

 * (Nice2Have) Gesichter auch am Rand des Bildes erkennen (PDF S.269)

 * (MUSS?) Nur größtes Gesicht finden 

 * Schwellwert maximale Gesichtsgröße setzen maxSize

 * Schwellwert minimale Gesichtsgröße setzen minSize(80x80)

 * (Nice2Have) Performance steigern durch Flags, Fenster (minfeaturesize) anpassung

 * *OK* Alle Gesichter finden 

 * *OK* Haar-Like "Viola-Jones-Algorithm" Facedetection mit OpenCV

== Administration ==

 * *OK* Sicherstellung dass jeder eine funktionierende IDE hat

 * *OK* Repository Einweisung
 
 * *OK* Einlesen, in *Facerecognition* mit *Eigenfaces* (von Dr. Schwanecke empfohlen)

 * *OK* Anforderungs-Analyse - Teilaufgaben klären die das System leisten muss

 * *OK* Beispiel Durchgehen Facedetection

== Fragen die wir klären müssen ==


== Fragen an Dr. Schwanecke ==

 * Müssen/sollten wir Webcam Fotos direkt neu erstellen oder einladen von DB?
  * A: Bilddatenbankd können wir vorher anlegen und trainieren
  * A: Zu erkennende Person wird 'live' per Cam fotografiert und erkannt
 
 * Soll es Bilder zuordnen oder von Webcam
  * A: von der Webcam muss es funktionieren

 * Wo muss Demo laufen? (Licht)
  * A: Auf einem beliebigen Rechner

 * Ist es von Voteil ein HSRM SVN Repository zu benutzen? Zugriff vom Prof etc.?
  * A: Ist egal